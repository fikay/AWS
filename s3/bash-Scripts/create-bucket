#!/usr/bin/env bash
validate_bucket_name() {
    local bucket_name="$1"
    local errors=0

    # Define validation rules and error messages as key-value pairs
        declare -A rules=(
        ["Name is required"]='[ -n "$bucket_name_lower" ]'
        ["Only lowercase letters, numbers, periods, and dashes"]='[[ "$bucket_name_lower" =~ ^[a-z0-9.\-]+$ ]]'
        ["Must start with a lowercase letter or number"]='[[ "$bucket_name_lower" =~ ^[a-z0-9] ]]'
        ["Can't end with a dash"]='[[ ! "$bucket_name_lower" =~ -$ ]]'
        ["Can't have consecutive periods"]='[[ ! "$bucket_name_lower" =~ \.\. ]]'
        ["Can't end with a dash adjacent to a period"]='[[ ! "$bucket_name_lower" =~ -\.$ ]]'
        ["Can't be formatted as an IP address"]='[[ ! ("$bucket_name_lower" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$) ]]'
        ["Must be between 3 and 63 characters"]='[[ ${#bucket_name_lower} -ge 3 && ${#bucket_name_lower} -le 63 ]]'
    )

    # Loop through rules and validate the bucket name
    for rule in "${!rules[@]}"; do
        if ! eval "${rules[$rule]}"; then
            echo "❌ $rule"
            ((errors++))
        fi
    done

    # Check the result
    if [ "$errors" -eq 0 ]; then
        echo "✅ Bucket name '$bucket_name' is valid!"
        return 0
    else
        echo "❌ Bucket name '$bucket_name' failed $errors validation(s)."
        return 1
    fi
}


function echo_repeat()
{
    echo
    for ((i=1; i<$2; i++)); do
        echo -n "$1"
    done
    echo
}

 echo_repeat "*" 50
 echo "Running script to create an S3 bucket"
 echo_repeat "*" 50


 if [ $# -ne 0 ]
    then
    echo "An argument was supplied"
    aws s3Api 
    fi
 